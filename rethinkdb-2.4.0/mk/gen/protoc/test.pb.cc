// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mk/gen/protoc/test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mk/gen/protoc/test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Foo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Foo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Foo_Bar_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mk_2fgen_2fprotoc_2ftest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mk_2fgen_2fprotoc_2ftest_2eproto() {
  protobuf_AddDesc_mk_2fgen_2fprotoc_2ftest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mk/gen/protoc/test.proto");
  GOOGLE_CHECK(file != NULL);
  Foo_descriptor_ = file->message_type(0);
  static const int Foo_offsets_[1] = {
  };
  Foo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Foo_descriptor_,
      Foo::default_instance_,
      Foo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Foo, _has_bits_[0]),
      -1,
      -1,
      sizeof(Foo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Foo, _internal_metadata_),
      -1);
  Foo_Bar_descriptor_ = Foo_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mk_2fgen_2fprotoc_2ftest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Foo_descriptor_, &Foo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mk_2fgen_2fprotoc_2ftest_2eproto() {
  delete Foo::default_instance_;
  delete Foo_reflection_;
}

void protobuf_AddDesc_mk_2fgen_2fprotoc_2ftest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_mk_2fgen_2fprotoc_2ftest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030mk/gen/protoc/test.proto\"\025\n\003Foo\"\016\n\003Bar"
    "\022\007\n\003Baz\020\001", 49);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mk/gen/protoc/test.proto", &protobuf_RegisterTypes);
  Foo::default_instance_ = new Foo();
  Foo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mk_2fgen_2fprotoc_2ftest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mk_2fgen_2fprotoc_2ftest_2eproto {
  StaticDescriptorInitializer_mk_2fgen_2fprotoc_2ftest_2eproto() {
    protobuf_AddDesc_mk_2fgen_2fprotoc_2ftest_2eproto();
  }
} static_descriptor_initializer_mk_2fgen_2fprotoc_2ftest_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Foo_Bar_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Foo_Bar_descriptor_;
}
bool Foo_Bar_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Foo_Bar Foo::Baz;
const Foo_Bar Foo::Bar_MIN;
const Foo_Bar Foo::Bar_MAX;
const int Foo::Bar_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Foo::Foo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Foo)
}

void Foo::InitAsDefaultInstance() {
}

Foo::Foo(const Foo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Foo)
}

void Foo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Foo::~Foo() {
  // @@protoc_insertion_point(destructor:Foo)
  SharedDtor();
}

void Foo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Foo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Foo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Foo_descriptor_;
}

const Foo& Foo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mk_2fgen_2fprotoc_2ftest_2eproto();
  return *default_instance_;
}

Foo* Foo::default_instance_ = NULL;

Foo* Foo::New(::google::protobuf::Arena* arena) const {
  Foo* n = new Foo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Foo::Clear() {
// @@protoc_insertion_point(message_clear_start:Foo)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Foo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Foo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Foo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Foo)
  return false;
#undef DO_
}

void Foo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Foo)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Foo)
}

::google::protobuf::uint8* Foo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Foo)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Foo)
  return target;
}

int Foo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Foo)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Foo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Foo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Foo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Foo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Foo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Foo)
    MergeFrom(*source);
  }
}

void Foo::MergeFrom(const Foo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Foo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Foo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Foo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Foo::CopyFrom(const Foo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Foo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Foo::IsInitialized() const {

  return true;
}

void Foo::Swap(Foo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Foo::InternalSwap(Foo* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Foo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Foo_descriptor_;
  metadata.reflection = Foo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Foo

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
