// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mk/gen/protoc/test.proto

#ifndef PROTOBUF_mk_2fgen_2fprotoc_2ftest_2eproto__INCLUDED
#define PROTOBUF_mk_2fgen_2fprotoc_2ftest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mk_2fgen_2fprotoc_2ftest_2eproto();
void protobuf_AssignDesc_mk_2fgen_2fprotoc_2ftest_2eproto();
void protobuf_ShutdownFile_mk_2fgen_2fprotoc_2ftest_2eproto();

class Foo;

enum Foo_Bar {
  Foo_Bar_Baz = 1
};
bool Foo_Bar_IsValid(int value);
const Foo_Bar Foo_Bar_Bar_MIN = Foo_Bar_Baz;
const Foo_Bar Foo_Bar_Bar_MAX = Foo_Bar_Baz;
const int Foo_Bar_Bar_ARRAYSIZE = Foo_Bar_Bar_MAX + 1;

const ::google::protobuf::EnumDescriptor* Foo_Bar_descriptor();
inline const ::std::string& Foo_Bar_Name(Foo_Bar value) {
  return ::google::protobuf::internal::NameOfEnum(
    Foo_Bar_descriptor(), value);
}
inline bool Foo_Bar_Parse(
    const ::std::string& name, Foo_Bar* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Foo_Bar>(
    Foo_Bar_descriptor(), name, value);
}
// ===================================================================

class Foo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Foo) */ {
 public:
  Foo();
  virtual ~Foo();

  Foo(const Foo& from);

  inline Foo& operator=(const Foo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Foo& default_instance();

  void Swap(Foo* other);

  // implements Message ----------------------------------------------

  inline Foo* New() const { return New(NULL); }

  Foo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Foo& from);
  void MergeFrom(const Foo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Foo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Foo_Bar Bar;
  static const Bar Baz =
    Foo_Bar_Baz;
  static inline bool Bar_IsValid(int value) {
    return Foo_Bar_IsValid(value);
  }
  static const Bar Bar_MIN =
    Foo_Bar_Bar_MIN;
  static const Bar Bar_MAX =
    Foo_Bar_Bar_MAX;
  static const int Bar_ARRAYSIZE =
    Foo_Bar_Bar_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Bar_descriptor() {
    return Foo_Bar_descriptor();
  }
  static inline const ::std::string& Bar_Name(Bar value) {
    return Foo_Bar_Name(value);
  }
  static inline bool Bar_Parse(const ::std::string& name,
      Bar* value) {
    return Foo_Bar_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Foo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mk_2fgen_2fprotoc_2ftest_2eproto();
  friend void protobuf_AssignDesc_mk_2fgen_2fprotoc_2ftest_2eproto();
  friend void protobuf_ShutdownFile_mk_2fgen_2fprotoc_2ftest_2eproto();

  void InitAsDefaultInstance();
  static Foo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Foo

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Foo_Bar> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Foo_Bar>() {
  return ::Foo_Bar_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mk_2fgen_2fprotoc_2ftest_2eproto__INCLUDED
