two_phase_workloads = [
    {
        'name':    'many-rows',
        'before':  '$RETHINKDB/test/memcached_workloads/many_rows.py --phase w',
        'after':   '$RETHINKDB/test/memcached_workloads/many_rows.py --phase r'
    }, {
        'name':    'multi-serial-mix',
        'before':  '$RETHINKDB/test/memcached_workloads/multi_serial_mix.py --save values',
        'after':   '$RETHINKDB/test/memcached_workloads/multi_serial_mix.py --load values'
    }
]

n_phase_workloads = [
    {
        'name':    'insert-many',
        'before':  '$RETHINKDB/test/rdb_workloads/insert_many.py --count 10000',
        'between': 'true',
        'after':   'true'
    }, {
        'name':    'serial-mix',
        'before':  '$RETHINKDB/test/memcached_workloads/serial_mix.py --save values',
        'between': '$RETHINKDB/test/memcached_workloads/serial_mix.py --load values --save values',
        'after':   '$RETHINKDB/test/memcached_workloads/serial_mix.py --load values'
    }, {
        'name':    'multi-serial-mix',
        'before':  '$RETHINKDB/test/memcached_workloads/multi_serial_mix.py --save values',
        'between': '$RETHINKDB/test/memcached_workloads/multi_serial_mix.py --load values --save values',
        'after':   '$RETHINKDB/test/memcached_workloads/multi_serial_mix.py --load values'
    }
]

two_phase_scenarios = {
    'rebalance':        "$RETHINKDB/test/scenarios/rebalance.py",
    'change-primary':   "$RETHINKDB/test/scenarios/change_primary.py",
    'failover':         "$RETHINKDB/test/scenarios/failover_to_secondary.py",
    'add-secondary':    "$RETHINKDB/test/scenarios/more_or_less_secondaries.py 1+1",
    'remove-secondary': "$RETHINKDB/test/scenarios/more_or_less_secondaries.py 1-1",
    'kill-secondary':   "$RETHINKDB/test/scenarios/kill_secondary.py",
    'transfer':         "$RETHINKDB/test/scenarios/transfer.py",
    'restart':          "$RETHINKDB/test/scenarios/restart.py"
}

n_phase_scenarios = {
    'more-or-less': "$RETHINKDB/test/scenarios/more_or_less_secondaries.py 2+1-1+1-1+1-1+1-1+1-1",
    'rebalance-1': "$RETHINKDB/test/scenarios/rebalance.py --sequence 2,++,--,+,-,+++,++,----",
    'rebalance-2': "$RETHINKDB/test/scenarios/rebalance.py --sequence 32,1,32,16,32,5,16,32"
}

options = " --workload-before '%(before)s --address $HOST:$PORT --table $DB_NAME.$TABLE_NAME' --workload-after '%(after)s --address $HOST:$PORT --table $DB_NAME.$TABLE_NAME'"

for sname, scenario in two_phase_scenarios.items():
    for workload in two_phase_workloads + n_phase_workloads:
        generate_test((scenario + options) % { "before": workload['before'], "after": workload['after'] }, name=sname + '-' + workload['name'])

for sname, scenario in n_phase_scenarios.items():
    for workload in n_phase_workloads:
        generate_test(
            (scenario + options + " --workload-between '%(between)s --address $HOST:$PORT --table $DB_NAME.$TABLE_NAME'")
            % { "before": workload['before'], "between": workload['between'], "after": workload['after']}, name=sname + '-' + workload['name']
        )
