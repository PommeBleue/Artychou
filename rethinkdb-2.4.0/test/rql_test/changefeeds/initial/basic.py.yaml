desc: Changefeeds with `include_initial` produce all of the expected items
table_variable_name: tbl

# We do the following:
#   1. Fill in some intial data 0/t-9/k
#   2. Start the changefees, check initial values
#   3. Add values 10/j-19/a and observe the changes
#   4. Update values 3/q, 6/n, 15/e, 16/d, and 19/a with {'updated':True}, observe the changes
#   5. Delete 4/p, 6/n, 15/e, and 18/b, observe the changes

# 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  0
# a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t

tests:
    # -- create secondary index
    
    - py: tbl.index_create('alpha')
      ot: {'created':1}
    - py: tbl.index_wait()['ready']
      ot: [True]
    
    # -- insert initial records - id: 0-9, alpha: t-k
    
    - py: tbl.insert(r.range(10).map({'id':r.row, 'alpha':r.expr('abcdefghijklmnopqrst').slice(r.expr(20).sub(r.row).sub(1), r.expr(20).sub(r.row))}))
      ot: partial({'errors':0, 'inserted':10})
    
    # -- start changefeeds
    
    - py:
       # table.changes
       - tableFeed = tbl.changes(include_states=True, include_initial=True)
       - tableFeedNoStates = tbl.changes(include_states=False, include_initial=True)
       
       # get.changes
       - getPreFeed = tbl.get(5).changes(include_states=True, include_initial=True)
       - getPostFeed = tbl.get(15).changes(include_states=True, include_initial=True)
       
       # getAll.changes
       - getAllPrimaryFeed = tbl.get_all(5, 15).changes(include_states=True, include_initial=True)
       - getAllSecondaryFeed = tbl.get_all('n', 'd', index='alpha').changes(include_states=True, include_initial=True) # equivelent to id:[6, 16]
       
       # between.changes
       - betweenPrimaryFeed = tbl.between(5, 15).changes(include_states=True, include_initial=True)
       - betweenSecondaryFeed = tbl.between('d', 'n', index='alpha').changes(include_states=True, include_initial=True) # equivelent to id:[6, 16]
    
    # -- read inital records
    
    # - table
    - py: fetch(tableFeed, 1)
      ot: [{"state": "initializing"}]
    - py:
        - fetch(tableFeed, 10)
        - fetch(tableFeedNoStates)
      ot: bag([{'new_val':{'id':0, 'alpha':'t'}}, {'new_val':{'id':1, 'alpha':'s'}},
               {'new_val':{'id':2, 'alpha':'r'}}, {'new_val':{'id':3, 'alpha':'q'}},
               {'new_val':{'id':4, 'alpha':'p'}}, {'new_val':{'id':5, 'alpha':'o'}},
               {'new_val':{'id':6, 'alpha':'n'}}, {'new_val':{'id':7, 'alpha':'m'}},
               {'new_val':{'id':8, 'alpha':'l'}}, {'new_val':{'id':9, 'alpha':'k'}}])
    - py: fetch(tableFeed)
      ot: [{"state": "ready"}]
    
    # - getPreFeed
    - py: fetch(getPreFeed, 1)
      ot: [{"state": "initializing"}]
    - py: fetch(getPreFeed, 1)
      ot: [{'new_val':{'id':5, 'alpha':'o'}}]
    - py: fetch(getPreFeed)
      ot: [{"state": "ready"}]
    
    # - getPostFeed
    - py: fetch(getPostFeed, 1)
      ot: [{"state": "initializing"}]
    - py: fetch(getPostFeed, 1)
      ot: [{'new_val':None}]
    - py: fetch(getPostFeed)
      ot: [{"state": "ready"}]
    
    # - getAllPrimaryFeed
    - py: fetch(getAllPrimaryFeed, 1)
      ot: [{"state": "initializing"}]
    - py: fetch(getAllPrimaryFeed, 1)
      ot: [{'new_val':{'id':5, 'alpha':'o'}}]
    - py: fetch(getAllPrimaryFeed)
      ot: [{"state": "ready"}]
    
    # - getAllSecondaryFeed
    - py: fetch(getAllSecondaryFeed, 1)
      ot: [{"state": "initializing"}]
    - py: fetch(getAllSecondaryFeed, 1)
      ot: [{'new_val':{'id':6, 'alpha':'n'}}]
    - py: fetch(getAllSecondaryFeed)
      ot: [{"state": "ready"}]
    
    # - betweenPrimaryFeed
    - py: fetch(betweenPrimaryFeed, 1)
      ot: [{"state": "initializing"}]
    - py: fetch(betweenPrimaryFeed, 5)
      ot: bag([{'new_val':{'id':5, 'alpha':'o'}}, {'new_val':{'id':6, 'alpha':'n'}},
               {'new_val':{'id':7, 'alpha':'m'}}, {'new_val':{'id':8, 'alpha':'l'}},
               {'new_val':{'id':9, 'alpha':'k'}}])
    - py: fetch(betweenPrimaryFeed)
      ot: [{"state": "ready"}]
    
    # - betweenSecondaryFeed
    - py: fetch(betweenSecondaryFeed, 1)
      ot: [{"state": "initializing"}]
    - py: fetch(betweenSecondaryFeed, 3)
      ot: bag([{'new_val':{'id':7, 'alpha':'m'}}, {'new_val':{'id':8, 'alpha':'l'}},
               {'new_val':{'id':9, 'alpha':'k'}}])
    - py: fetch(betweenSecondaryFeed)
      ot: [{"state": "ready"}]
    
    # -- Add values 10/j-19/a and observe the changes
    
    - py: tbl.insert(r.range(10, 20).map({'id':r.row, 'alpha':r.expr('abcdefghijklmnopqrst').slice(r.expr(20).sub(r.row).sub(1), r.expr(20).sub(r.row))}))
      ot: partial({'errors':0, 'inserted':10})
    
    # - table
    - py:
        - fetch(tableFeed)
        - fetch(tableFeedNoStates)
      ot: bag([{'old_val':None, 'new_val':{'id':10, 'alpha':'j'}},
               {'old_val':None, 'new_val':{'id':11, 'alpha':'i'}},
               {'old_val':None, 'new_val':{'id':12, 'alpha':'h'}},
               {'old_val':None, 'new_val':{'id':13, 'alpha':'g'}},
               {'old_val':None, 'new_val':{'id':14, 'alpha':'f'}}, 
               {'old_val':None, 'new_val':{'id':15, 'alpha':'e'}}, 
               {'old_val':None, 'new_val':{'id':16, 'alpha':'d'}}, 
               {'old_val':None, 'new_val':{'id':17, 'alpha':'c'}},
               {'old_val':None, 'new_val':{'id':18, 'alpha':'b'}},
               {'old_val':None, 'new_val':{'id':19, 'alpha':'a'}}])
    
    # - getPreFeed
    - py: fetch(getPreFeed)
      ot: []
    
    # - getPostFeed
    - py: fetch(getPostFeed)
      ot: [{'old_val':None, 'new_val':{'id':15, 'alpha':'e'}}]
    
    # - getAllPrimaryFeed
    - py: fetch(getAllPrimaryFeed)
      ot: [{'old_val':None, 'new_val':{'id':15,  'alpha':'e'}}]
    
    # - getAllSecondaryFeed
    - py: fetch(getAllSecondaryFeed)
      ot: [{'old_val':None, 'new_val':{'id':16,  'alpha':'d'}}]
    
    # - betweenPrimaryFeed
    - py: fetch(betweenPrimaryFeed)
      ot: bag([{'old_val':None, 'new_val':{'id':10, 'alpha':'j'}},
               {'old_val':None, 'new_val':{'id':11, 'alpha':'i'}},
               {'old_val':None, 'new_val':{'id':12, 'alpha':'h'}},
               {'old_val':None, 'new_val':{'id':13, 'alpha':'g'}},
               {'old_val':None, 'new_val':{'id':14, 'alpha':'f'}}])
    
    # - betweenSecondaryFeed
    - py: fetch(betweenSecondaryFeed)
      ot: partial([
               {'old_val':None, 'new_val':{'id':10, 'alpha':'j'}},
               {'old_val':None, 'new_val':{'id':11, 'alpha':'i'}},
               {'old_val':None, 'new_val':{'id':12, 'alpha':'h'}},
               {'old_val':None, 'new_val':{'id':13, 'alpha':'g'}},
               {'old_val':None, 'new_val':{'id':14, 'alpha':'f'}},  
               {'old_val':None, 'new_val':{'id':15, 'alpha':'e'}},
               {'old_val':None, 'new_val':{'id':16, 'alpha':'d'}}])
    
    # -- Update values 3/q, 6/n, 15/e, 16/d, and 19/a with {'updated':True}
    
    - py: tbl.get_all(5, 6, 15, 16).update({'updated':True}) # 5/o, 6/n, 15/e, 15/d
      ot: partial({'errors': 0, 'replaced':4})
    
    # - tableFeed
    - py:
        - fetch(tableFeed)
        - fetch(tableFeedNoStates)
      ot: bag([{'old_val':{'id':5,  'alpha':'o'}, 'new_val':{'id':5,  'alpha':'o', 'updated':True}},
               {'old_val':{'id':6,  'alpha':'n'}, 'new_val':{'id':6,  'alpha':'n', 'updated':True}},
               {'old_val':{'id':15, 'alpha':'e'}, 'new_val':{'id':15, 'alpha':'e', 'updated':True}}, 
               {'old_val':{'id':16, 'alpha':'d'}, 'new_val':{'id':16, 'alpha':'d', 'updated':True}}])
    
    # - getPreFeed
    - py: fetch(getPreFeed)
      ot: [{'old_val':{'id':5,  'alpha':'o'}, 'new_val':{'id':5,  'alpha':'o', 'updated':True}}]
    
    # - getPostFeed
    - py: fetch(getPostFeed)
      ot: [{'old_val':{'id':15, 'alpha':'e'}, 'new_val':{'id':15, 'alpha':'e', 'updated':True}}]
    
    # - getAllPrimaryFeed
    - py: fetch(getAllPrimaryFeed)
      ot: bag([{'old_val':{'id':5,  'alpha':'o'}, 'new_val':{'id':5,  'alpha':'o', 'updated':True}},
               {'old_val':{'id':15, 'alpha':'e'}, 'new_val':{'id':15, 'alpha':'e', 'updated':True}}])
    
    # - getAllSecondaryFeed
    - py: fetch(getAllSecondaryFeed)
      ot: bag([{'old_val':{'id':6,  'alpha':'n'}, 'new_val':{'id':6,  'alpha':'n', 'updated':True}},
               {'old_val':{'id':16, 'alpha':'d'}, 'new_val':{'id':16, 'alpha':'d', 'updated':True}}])
    
    # - betweenPrimaryFeed
    - py: fetch(betweenPrimaryFeed)
      ot: bag([{'old_val':{'id':5,  'alpha':'o'},  'new_val':{'id':5, 'alpha':'o', 'updated':True}},
               {'old_val':{'id':6,  'alpha':'n'},  'new_val':{'id':6, 'alpha':'n', 'updated':True}}])
    
    # - betweenSecondaryFeed
    - py: fetch(betweenSecondaryFeed)
      ot: bag([{'old_val':{'id':15, 'alpha':'e'},  'new_val':{'id':15, 'alpha':'e', 'updated':True}},
               {'old_val':{'id':16, 'alpha':'d'},  'new_val':{'id':16, 'alpha':'d', 'updated':True}}])

    # -- Delete 4/p, 6/n, 15/e, and 18/b
    
    - py: tbl.get_all(4, 6, 15, 18).delete()
      ot: partial({'errors':0, 'deleted':4})
    
    # - tableFeed
    - py:
        - fetch(tableFeed)
        - fetch(tableFeedNoStates)
      ot: bag([{'old_val':{'id':4,  'alpha':'p'},                 'new_val':None},
               {'old_val':{'id':6,  'alpha':'n', 'updated':True}, 'new_val':None},
               {'old_val':{'id':15, 'alpha':'e', 'updated':True}, 'new_val':None}, 
               {'old_val':{'id':18, 'alpha':'b'},                 'new_val':None}])
    
    # - getPreFeed
    - py: fetch(getPreFeed)
      ot: []
    
    # - getPostFeed
    - py: fetch(getPostFeed)
      ot: [{'old_val':{'id':15, 'alpha':'e', 'updated':True}, 'new_val':None}]
    
    # - getAllPrimaryFeed
    - py: fetch(getAllPrimaryFeed)
      ot: [{'old_val':{'id':15, 'alpha':'e', 'updated':True}, 'new_val':None}]
    
    # - getAllSecondaryFeed
    - py: fetch(getAllSecondaryFeed)
      ot: [{'old_val':{'id':6,  'alpha':'n', 'updated':True}, 'new_val':None}]
    
    # - betweenPrimaryFeed
    - py: fetch(betweenPrimaryFeed)
      ot: [{'old_val':{'id':6,  'alpha':'n', 'updated':True}, 'new_val':None}]
    
    # - betweenSecondaryFeed
    - py: fetch(betweenSecondaryFeed)
      ot: [{'old_val':{'id':15, 'alpha':'e', 'updated':True}, 'new_val':None}]

